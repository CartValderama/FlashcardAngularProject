{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/flashcard.service\";\nexport class FlashcardformComponent {\n  constructor(_formbuilder, _router, _route, _flashcardService) {\n    this._formbuilder = _formbuilder;\n    this._router = _router;\n    this._route = _route;\n    this._flashcardService = _flashcardService;\n    this.isEditMode = false;\n    this.flashcardId = -1;\n    this.flashcardForm = _formbuilder.group({\n      Question: [\"\", [Validators.required, Validators.maxLength(90)]],\n      Answer: [\"\", [Validators.required, Validators.maxLength(90)]]\n    });\n  }\n  onSubmit() {\n    console.log(\"FlashcardCreate form submitted:\");\n    console.log(this.flashcardForm);\n    console.log(\"The flashcard \" + this.flashcardForm.value.flashcardName + \" is created.\");\n    console.log(this.flashcardForm.touched);\n    const newFlashcard = this.flashcardForm.value;\n    const createUrl = \"api/item/create\";\n    if (this.isEditMode) {\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate([\"/flashcard\"]);\n        } else {\n          console.log(\"Flashcard update failed\");\n        }\n      });\n    } else {\n      this._flashcardService.createFlashcard(newFlashcard).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this._router.navigate([\"/flashcard\"]);\n        } else {\n          console.log(\"Flashcard creation failed\");\n        }\n      });\n    }\n    ;\n  }\n  backToFlashcards() {\n    this._router.navigate([\"/flashcard\"]);\n  }\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      if (params[\"mode\"] === \"create\") {\n        this.isEditMode = false; // Create mode\n      } else if (params[\"mode\"] === \"edit\") {\n        this.isEditMode = true; // Edit mode\n        this.flashcardId = +params[\"id\"];\n        this.loadItemForEdit(this.flashcardId);\n      }\n    });\n  }\n  loadItemForEdit(flashcardId) {\n    this._flashcardService.getFlashcardById(flashcardId).subscribe(flashcard => {\n      console.log(\"retrived flashcard: \", flashcard);\n      this.flashcardForm.patchValue({\n        flashcardName: flashcard.FlashcardName,\n        flashcardDescription: flashcard.FlashcardDescription\n      });\n    }, error => {\n      console.error(\"Error loading flashcard for edit: \", error);\n    });\n  }\n}\nFlashcardformComponent.ɵfac = function FlashcardformComponent_Factory(t) {\n  return new (t || FlashcardformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FlashcardService));\n};\nFlashcardformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashcardformComponent,\n  selectors: [[\"app-flashcard-flashcardform\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"flashcardName\"], [\"type\", \"text\", \"id\", \"flashcardName\", \"formControlName\", \"flashcardName\", 1, \"form-control\"], [\"for\", \"flashcardDescription\"], [\"type\", \"text\", \"id\", \"flashcardDescription\", \"formControlName\", \"flashcardDescription\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn-primary\", \"btn-secondary\", 3, \"click\"]],\n  template: function FlashcardformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FlashcardformComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Question: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Answer: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function FlashcardformComponent_Template_button_click_13_listener() {\n        return ctx.backToFlashcards();\n      });\n      i0.ɵɵtext(14, \"Cancel\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Update\" : \"Create\", \" flashcard\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.flashcardForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.flashcardForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Create\", \" flashcard \");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAA0C,gBAAgB;;;;;AASrG,OAAM,MAAOC,sBAAsB;EAKjCC,YACUC,YAAyB,EACzBC,OAAe,EACfC,MAAsB,EACtBC,iBAAmC;IAHnC,iBAAY,GAAZH,YAAY;IACZ,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IACN,sBAAiB,GAAjBC,iBAAiB;IAP3B,eAAU,GAAY,KAAK;IAC3B,gBAAW,GAAW,CAAC,CAAC;IAQtB,IAAI,CAACC,aAAa,GAAGJ,YAAY,CAACK,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CACbT,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC;MACFC,MAAM,EAAE,CAAC,EAAE,EAAE,CACXZ,UAAU,CAACU,QAAQ,EACnBV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CACzB;KACF,CAAC;EACJ;EAEAE,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,aAAa,CAAC;IAC/BO,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAACR,aAAa,CAACS,KAAK,CAACC,aAAa,GAAG,cAAc,CAAC;IACvFH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,aAAa,CAACW,OAAO,CAAC;IACvC,MAAMC,YAAY,GAAG,IAAI,CAACZ,aAAa,CAACS,KAAK;IAC7C,MAAMI,SAAS,GAAG,iBAAiB;IACnC,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACf,iBAAiB,CAACgB,eAAe,CAAC,IAAI,CAACC,WAAW,EAAEJ,YAAY,CAAC,CACnEK,SAAS,CAACC,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBZ,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAACvB,OAAO,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACtC,MACI;UACHd,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;MAE1C,CAAC,CAAC;KACL,MACI;MACH,IAAI,CAACT,iBAAiB,CAACuB,eAAe,CAACV,YAAY,CAAC,CACjDK,SAAS,CAACC,QAAQ,IAAG;QACpB,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBZ,OAAO,CAACC,GAAG,CAACU,QAAQ,CAACE,OAAO,CAAC;UAC7B,IAAI,CAACvB,OAAO,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACtC,MACI;UACHd,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;MAE5C,CAAC,CAAC;;IACL;EACH;EAEAe,gBAAgB;IACd,IAAI,CAAC1B,OAAO,CAACwB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACvC;EAEAG,QAAQ;IACN,IAAI,CAAC1B,MAAM,CAAC2B,MAAM,CAACR,SAAS,CAACQ,MAAM,IAAG;MACpC,IAAIA,MAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;QAC/B,IAAI,CAACX,UAAU,GAAG,KAAK,CAAC,CAAC;OAC1B,MAAM,IAAIW,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;QACpC,IAAI,CAACX,UAAU,GAAG,IAAI,CAAC,CAAC;QACxB,IAAI,CAACE,WAAW,GAAG,CAACS,MAAM,CAAC,IAAI,CAAC;QAChC,IAAI,CAACC,eAAe,CAAC,IAAI,CAACV,WAAW,CAAC;;IAE1C,CAAC,CAAC;EACJ;EAEAU,eAAe,CAACV,WAAmB;IACjC,IAAI,CAACjB,iBAAiB,CAAC4B,gBAAgB,CAACX,WAAW,CAAC,CACjDC,SAAS,CACPW,SAAc,IAAI;MACjBrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEoB,SAAS,CAAC;MAC9C,IAAI,CAAC5B,aAAa,CAAC6B,UAAU,CAAC;QAC5BnB,aAAa,EAAEkB,SAAS,CAACE,aAAa;QACtCC,oBAAoB,EAAEH,SAAS,CAACI;OACjC,CAAC;IACJ,CAAC,EACAC,KAAU,IAAI;MACb1B,OAAO,CAAC0B,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D,CAAC,CACF;EACL;;AAtFWvC,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAwC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,0BAAI;MAAAA,YAA+C;MAAAA,iBAAK;MAExDA,+BAA0D;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACvDD,8BAAwB;MACKA,0BAAU;MAAAA,iBAAQ;MAC7CA,2BAA2F;MAC7FA,iBAAM;MACNA,8BAAwB;MACYA,wBAAQ;MAAAA,iBAAQ;MAClDA,4BAAyG;MAC3GA,iBAAM;MACNA,kCAAiF;MAC/EA,aACF;MAAAA,iBAAS;MACTA,kCAAuE;MAA7BA;QAAA,OAASC,sBAAkB;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAdpFA,eAA+C;MAA/CA,6EAA+C;MAE7CA,eAA2B;MAA3BA,6CAA2B;MASeA,eAAkC;MAAlCA,oDAAkC;MAC9EA,eACF;MADEA,+EACF","names":["Validators","FlashcardformComponent","constructor","_formbuilder","_router","_route","_flashcardService","flashcardForm","group","Question","required","maxLength","Answer","onSubmit","console","log","value","flashcardName","touched","newFlashcard","createUrl","isEditMode","updateFlashcard","flashcardId","subscribe","response","success","message","navigate","createFlashcard","backToFlashcards","ngOnInit","params","loadItemForEdit","getFlashcardById","flashcard","patchValue","FlashcardName","flashcardDescription","FlashcardDescription","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\flashcard\\flashcardform.component.ts","C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\flashcard\\flashcardform.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormGroup, FormControl, Validators, FormBuilder, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { FlashcardService } from \"../services/flashcard.service\";\r\n\r\n@Component({\r\n  selector: \"app-flashcard-flashcardform\",\r\n  templateUrl: \"./flashcardform.component.html\"\r\n})\r\n\r\nexport class FlashcardformComponent {\r\n  flashcardForm: FormGroup;\r\n  isEditMode: boolean = false;\r\n  flashcardId: number = -1;\r\n\r\n  constructor(\r\n    private _formbuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _flashcardService: FlashcardService)\r\n  {\r\n    this.flashcardForm = _formbuilder.group({\r\n      Question: [\"\", [\r\n        Validators.required,\r\n        Validators.maxLength(90)\r\n      ]],\r\n      Answer: [\"\", [\r\n        Validators.required,\r\n        Validators.maxLength(90)\r\n      ]],\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"FlashcardCreate form submitted:\");\r\n    console.log(this.flashcardForm);\r\n    console.log(\"The flashcard \" + this.flashcardForm.value.flashcardName + \" is created.\");\r\n    console.log(this.flashcardForm.touched);\r\n    const newFlashcard = this.flashcardForm.value;\r\n    const createUrl = \"api/item/create\";\r\n    if (this.isEditMode) {\r\n      this._flashcardService.updateFlashcard(this.flashcardId, newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate([\"/flashcard\"]);\r\n          }\r\n          else {\r\n            console.log(\"Flashcard update failed\");\r\n          }\r\n        })\r\n    }\r\n    else {\r\n      this._flashcardService.createFlashcard(newFlashcard)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this._router.navigate([\"/flashcard\"]);\r\n          }\r\n          else {\r\n            console.log(\"Flashcard creation failed\");\r\n          }\r\n        });\r\n    };\r\n  }\r\n\r\n  backToFlashcards() {\r\n    this._router.navigate([\"/flashcard\"]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.params.subscribe(params => {\r\n      if (params[\"mode\"] === \"create\") {\r\n        this.isEditMode = false; // Create mode\r\n      } else if (params[\"mode\"] === \"edit\") {\r\n        this.isEditMode = true; // Edit mode\r\n        this.flashcardId = +params[\"id\"];\r\n        this.loadItemForEdit(this.flashcardId);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadItemForEdit(flashcardId: number) {\r\n    this._flashcardService.getFlashcardById(flashcardId)\r\n      .subscribe(\r\n        (flashcard: any) => {\r\n          console.log(\"retrived flashcard: \", flashcard);\r\n          this.flashcardForm.patchValue({\r\n            flashcardName: flashcard.FlashcardName,\r\n            flashcardDescription: flashcard.FlashcardDescription\r\n          });\r\n        },\r\n        (error: any) => {\r\n          console.error(\"Error loading flashcard for edit: \", error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>{{isEditMode ? 'Update' : 'Create' }} flashcard</h2>\r\n\r\n<form [formGroup]=\"flashcardForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"flashcardName\">Question: </label>\r\n    <input type=\"text\" id=\"flashcardName\" formControlName=\"flashcardName\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"flashcardDescription\">Answer: </label>\r\n    <input type=\"text\" id=\"flashcardDescription\" formControlName=\"flashcardDescription\" class=\"form-control\">\r\n  </div>\r\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"flashcardForm.invalid\">\r\n    {{isEditMode ? 'Update' : 'Create'}} flashcard\r\n  </button>\r\n  <button class=\"btn-primary btn-secondary\" (click)=\"backToFlashcards()\">Cancel</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}