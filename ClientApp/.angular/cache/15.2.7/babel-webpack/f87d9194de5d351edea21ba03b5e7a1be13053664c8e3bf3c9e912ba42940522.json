{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FolderService {\n  constructor(_http) {\n    this._http = _http;\n    this.baseUrl = \"api/folder/\";\n  }\n  getFolders() {\n    return this._http.get(this.baseUrl);\n  }\n  createFolder(newFolder) {\n    const createUrl = 'api/folder/create';\n    return this._http.post(createUrl, newFolder);\n  }\n  getFolderById(folderId) {\n    const url = \"${this.baseUrl}/${folderId}\";\n    return this._http.get(url);\n  }\n  updateFolder(folderId, newFolder) {\n    const url = \"${this.baseUrl}/update/${folderId}\";\n    newFolder.FolderId = folderId;\n    return this._http.put(url, newFolder);\n  }\n  deleteItem(folderId) {\n    const url = \"${this.baseUrl}/delete/${folderId}\";\n    return this._http.delete(url);\n  }\n}\nFolderService.ɵfac = function FolderService_Factory(t) {\n  return new (t || FolderService)(i0.ɵɵinject(i1.HttpClient));\n};\nFolderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FolderService,\n  factory: FolderService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,YAAO,GAAG,aAAa;EAEU;EAEzCC,UAAU;IACR,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAY,IAAI,CAACC,OAAO,CAAC;EAChD;EAEAC,YAAY,CAACC,SAAkB;IAC7B,MAAMC,SAAS,GAAG,mBAAmB;IACrC,OAAO,IAAI,CAACN,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,SAAS,CAAC;EACnD;EAEAG,aAAa,CAACC,QAAgB;IAC5B,MAAMC,GAAG,GAAG,6BAA6B;IACzC,OAAO,IAAI,CAACV,KAAK,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC5B;EAEAC,YAAY,CAACF,QAAgB,EAAEJ,SAAc;IAC3C,MAAMK,GAAG,GAAG,oCAAoC;IAChDL,SAAS,CAACO,QAAQ,GAAGH,QAAQ;IAC7B,OAAO,IAAI,CAACT,KAAK,CAACa,GAAG,CAAMH,GAAG,EAAEL,SAAS,CAAC;EAC5C;EAEAS,UAAU,CAACL,QAAgB;IACzB,MAAMC,GAAG,GAAG,oCAAoC;IAChD,OAAO,IAAI,CAACV,KAAK,CAACe,MAAM,CAACL,GAAG,CAAC;EAC/B;;AA5BWZ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAkB,SAAblB,aAAa;EAAAmB,YAHZ;AAAM","names":["FolderService","constructor","_http","getFolders","get","baseUrl","createFolder","newFolder","createUrl","post","getFolderById","folderId","url","updateFolder","FolderId","put","deleteItem","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\services\\folder.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { IFolder } from \"../models/folder\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\n\r\nexport class FolderService {\r\n  private baseUrl = \"api/folder/\";\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getFolders(): Observable<IFolder[]> {\r\n    return this._http.get<IFolder[]>(this.baseUrl);\r\n  }\r\n\r\n  createFolder(newFolder: IFolder): Observable<any> {\r\n    const createUrl = 'api/folder/create';\r\n    return this._http.post<any>(createUrl, newFolder);\r\n  }\r\n\r\n  getFolderById(folderId: number): Observable<any> {\r\n    const url = \"${this.baseUrl}/${folderId}\";\r\n    return this._http.get(url);\r\n  }\r\n\r\n  updateFolder(folderId: number, newFolder: any): Observable<any> {\r\n    const url = \"${this.baseUrl}/update/${folderId}\";\r\n    newFolder.FolderId = folderId;\r\n    return this._http.put<any>(url, newFolder);\r\n  }\r\n\r\n  deleteItem(folderId: number): Observable<any> {\r\n    const url = \"${this.baseUrl}/delete/${folderId}\";\r\n    return this._http.delete(url);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}