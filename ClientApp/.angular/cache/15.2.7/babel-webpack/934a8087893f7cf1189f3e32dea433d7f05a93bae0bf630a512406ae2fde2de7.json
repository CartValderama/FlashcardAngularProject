{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/folder.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a2) {\n  return [\"/folderform\", \"edit\", a2];\n};\nfunction FolderComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 10);\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function FolderComponent_tr_31_Template_a_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const folder_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteFolder(folder_r1));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const folder_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.CreationDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, folder_r1.FolderId));\n  }\n}\nconst _c1 = function (a2) {\n  return [\"/folderform\", \"create\", a2];\n};\nexport class FolderComponent {\n  // injecting the HttpClient service into the component\n  constructor(_router, _folderService) {\n    this._router = _router;\n    this._folderService = _folderService;\n    this.viewTitle = \"Table\";\n    this._listFilter = \"\";\n    this.folders = [];\n    this.filteredFolders = this.folders;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log(\"In setter: \", value);\n    this.filteredFolders = this.performFilter(value);\n  }\n  deleteFolder(folder) {\n    const confirmDelete = confirm(`Are you sure you want to delete folder #${folder.FolderId}?`);\n    if (confirmDelete) {\n      this._folderService.deleteItem(folder.FolderId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this.filteredFolders = this.filteredFolders.filter(f => f !== folder);\n        }\n      }, error => {\n        console.log(\"Error deleting item:\", error);\n      });\n    }\n  }\n  getFolders() {\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\n    this._folderService.getFolders().subscribe(data => {\n      console.log(\"All\", JSON.stringify(data));\n      this.folders = data;\n      this.filteredFolders = this.folders;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.folders.filter(folder => folder.FolderName.toLocaleLowerCase().includes(filterBy));\n  }\n  navigateToFolderform() {\n    this._router.navigate([\"/folderform\"]);\n  }\n  ngOnInit() {\n    console.log(\"FolderComponent created\");\n    this.getFolders();\n    console.log(\"getFolders() called from oninit!\");\n  }\n}\nFolderComponent.ɵfac = function FolderComponent_Factory(t) {\n  return new (t || FolderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FolderService));\n};\nFolderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FolderComponent,\n  selectors: [[\"app-folder-component\"]],\n  decls: 32,\n  vars: 7,\n  consts: [[\"id\", \"tableLabel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [1, \"btn\", \"btn-secondary\", 3, \"routerLink\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [1, \"delete-link\", 3, \"click\"]],\n  template: function FolderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FolderComponent_Template_button_click_2_listener() {\n        return ctx.getFolders();\n      });\n      i0.ɵɵtext(3, \"Get folders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function FolderComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 6)(11, \"h4\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FolderComponent_Template_button_click_13_listener() {\n        return ctx.navigateToFolderform();\n      });\n      i0.ɵɵtext(14, \"Create new folder\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Create new folder (routerlink)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"table\", 8)(18, \"thead\")(19, \"tr\")(20, \"th\");\n      i0.ɵɵtext(21, \"Folder id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Folder name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Folder description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Folder creation date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"tbody\");\n      i0.ɵɵtemplate(31, FolderComponent_tr_31_Template, 14, 7, \"tr\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of folders (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c1, -1));\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredFolders);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FolderComponent","constructor","_router","_folderService","folders","listFilter","_listFilter","value","console","log","filteredFolders","performFilter","deleteFolder","folder","confirmDelete","confirm","FolderId","deleteItem","subscribe","response","success","message","filter","f","error","getFolders","data","JSON","stringify","filterBy","toLocaleLowerCase","FolderName","includes","navigateToFolderform","navigate","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\folder\\folder.component.html","C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\folder\\folder.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of folders ({{viewTitle}} View)</h1>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"getFolders()\">Get folders</button>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-2\">Filter by:</div>\r\n  <div class=\"col-md-4\">\r\n    <input type=\"text\" [(ngModel)] =\"listFilter\"/>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <h4>Filtered by: {{listFilter}}</h4>\r\n  </div>\r\n</div>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"navigateToFolderform()\">Create new folder</button>\r\n<button class=\"btn btn-secondary\" [routerLink]=\"['/folderform', 'create', -1]\">Create new folder (routerlink)</button>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Folder id</th>\r\n      <th>Folder name</th>\r\n      <th>Folder description</th>\r\n      <th>Folder creation date</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let folder of filteredFolders\">\r\n      <td>{{folder.FolderId}}</td>\r\n      <td>{{folder.FolderName}}</td>\r\n      <td>{{folder.FolderDescription}}</td>\r\n      <td>{{folder.CreationDate}}</td>\r\n      <td>\r\n        <a [routerLink]=\"['/folderform', 'edit', folder.FolderId]\">Update</a>\r\n        <a class=\"delete-link\" (click)=\"deleteFolder(folder)\">Delete</a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IFolder } from \"../models/folder\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FolderService } from \"../services/folder.service\";\r\n\r\n@Component({\r\n  selector: \"app-folder-component\",\r\n  templateUrl: \"./folder.component.html\"\r\n})\r\n\r\nexport class FolderComponent implements OnInit{\r\n  viewTitle: string = \"Table\";\r\n  private _listFilter: string = \"\";\r\n  folders: IFolder[] = [];\r\n\r\n  // injecting the HttpClient service into the component\r\n  constructor(\r\n    private _router: Router,\r\n  private _folderService: FolderService) {}\r\n\r\n  get listFilter() {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    console.log(\"In setter: \", value);\r\n    this.filteredFolders = this.performFilter(value);\r\n  }\r\n\r\n  deleteFolder(folder: IFolder): void {\r\n    const confirmDelete = confirm(`Are you sure you want to delete folder #${folder.FolderId}?`);\r\n\r\n    if (confirmDelete) {\r\n      this._folderService.deleteItem(folder.FolderId)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this.filteredFolders = this.filteredFolders.filter(f => f !== folder);\r\n          }\r\n        },\r\n          (error) => {\r\n            console.log(\"Error deleting item:\", error);\r\n          });\r\n    }\r\n  }\r\n\r\n  getFolders(): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\r\n    this._folderService.getFolders()\r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received \r\n        console.log(\"All\", JSON.stringify(data));\r\n        this.folders = data;\r\n        this.filteredFolders = this.folders;\r\n      });\r\n  }\r\n\r\n  filteredFolders: IFolder[] = this.folders;\r\n  performFilter(filterBy: string): IFolder[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.folders.filter((folder: IFolder) =>\r\n      folder.FolderName.toLocaleLowerCase().includes(filterBy));\r\n  }\r\n\r\n  navigateToFolderform() {\r\n    this._router.navigate([\"/folderform\"]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"FolderComponent created\");\r\n    this.getFolders();\r\n    console.log(\"getFolders() called from oninit!\")\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}