{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/flashcard.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = function (a2) {\n  return [\"/flashcardform\", \"edit\", a2];\n};\nfunction FlashcardComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"a\", 10);\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function FlashcardComponent_tr_33_Template_a_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const flashcard_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteFlashcard(flashcard_r1));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const flashcard_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flashcard_r1.FlashcardId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flashcard_r1.Question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flashcard_r1.Answer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flashcard_r1.CreationDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(flashcard_r1.DeckId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, flashcard_r1.FlashcardId));\n  }\n}\nconst _c1 = function () {\n  return [\"/flashcardform\", \"create\", 1];\n};\nexport class FlashcardComponent {\n  // injecting the HttpClient service into the component\n  constructor(_router, _flashcardService) {\n    this._router = _router;\n    this._flashcardService = _flashcardService;\n    this.viewTitle = \"Table\";\n    this._listFilter = \"\";\n    this.flashcards = [];\n    this.filteredFlashcards = this.flashcards;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log(\"In setter: \", value);\n    this.filteredFlashcards = this.performFilter(value);\n  }\n  deleteFlashcard(flashcard) {\n    const confirmDelete = confirm(`Are you sure you want to delete flashcard #${flashcard.FlashcardId}?`);\n    if (confirmDelete) {\n      this._flashcardService.deleteItem(flashcard.FlashcardId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n          this.filteredFlashcards = this.filteredFlashcards.filter(f => f !== flashcard);\n        }\n      }, error => {\n        console.log(\"Error deleting item:\", error);\n      });\n    }\n  }\n  getFlashcards() {\n    // call to the server with the url \"api/item/\", expected return type is an IFlashcard array. This is also an observable return by the get\n    this._flashcardService.getFlashcards().subscribe(data => {\n      console.log(\"All\", JSON.stringify(data));\n      this.flashcards = data;\n      this.filteredFlashcards = this.flashcards;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.flashcards.filter(flashcard => flashcard.Question.toLocaleLowerCase().includes(filterBy));\n  }\n  navigateToFlashcardform() {\n    this._router.navigate([\"/flashcardform\"]);\n  }\n  ngOnInit() {\n    console.log(\"FlashcardComponent created\");\n    this.getFlashcards();\n    console.log(\"getFlashcards() called from oninit!\");\n  }\n}\nFlashcardComponent.ɵfac = function FlashcardComponent_Factory(t) {\n  return new (t || FlashcardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlashcardService));\n};\nFlashcardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlashcardComponent,\n  selectors: [[\"app-flashcard-component\"]],\n  decls: 34,\n  vars: 6,\n  consts: [[\"id\", \"tableLabel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [1, \"btn\", \"btn-secondary\", 3, \"routerLink\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [1, \"delete-link\", 3, \"click\"]],\n  template: function FlashcardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FlashcardComponent_Template_button_click_2_listener() {\n        return ctx.getFlashcards();\n      });\n      i0.ɵɵtext(3, \"Get flashcards\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function FlashcardComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 6)(11, \"h4\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function FlashcardComponent_Template_button_click_13_listener() {\n        return ctx.navigateToFlashcardform();\n      });\n      i0.ɵɵtext(14, \"Create new flashcard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵtext(16, \"Create new flashcard (routerlink)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"table\", 8)(18, \"thead\")(19, \"tr\")(20, \"th\");\n      i0.ɵɵtext(21, \"Flashcard id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Flashcard question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Flashcard answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Flashcard creation date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"Flashcard's deckid\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\");\n      i0.ɵɵtext(31, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"tbody\");\n      i0.ɵɵtemplate(33, FlashcardComponent_tr_33_Template, 16, 8, \"tr\", 9);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of flashcards (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c1));\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredFlashcards);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i1.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FlashcardComponent","constructor","_router","_flashcardService","flashcards","listFilter","_listFilter","value","console","log","filteredFlashcards","performFilter","deleteFlashcard","flashcard","confirmDelete","confirm","FlashcardId","deleteItem","subscribe","response","success","message","filter","f","error","getFlashcards","data","JSON","stringify","filterBy","toLocaleLowerCase","Question","includes","navigateToFlashcardform","navigate","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\flashcard\\flashcard.component.html","C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\flashcard\\flashcard.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of flashcards ({{viewTitle}} View)</h1>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"getFlashcards()\">Get flashcards</button>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-2\">Filter by:</div>\r\n  <div class=\"col-md-4\">\r\n    <input type=\"text\" [(ngModel)] =\"listFilter\"/>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <h4>Filtered by: {{listFilter}}</h4>\r\n  </div>\r\n</div>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"navigateToFlashcardform()\">Create new flashcard</button>\r\n<button class=\"btn btn-secondary\" [routerLink]=\"['/flashcardform', 'create', 1]\">Create new flashcard (routerlink)</button>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Flashcard id</th>\r\n      <th>Flashcard question</th>\r\n      <th>Flashcard answer</th>\r\n      <th>Flashcard creation date</th>\r\n      <th>Flashcard's deckid</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let flashcard of filteredFlashcards\">\r\n      <td>{{flashcard.FlashcardId}}</td>\r\n      <td>{{flashcard.Question}}</td>\r\n      <td>{{flashcard.Answer}}</td>\r\n      <td>{{flashcard.CreationDate}}</td>\r\n      <td>{{flashcard.DeckId}}</td>\r\n      <td>\r\n        <a [routerLink]=\"['/flashcardform', 'edit', flashcard.FlashcardId]\">Update</a>\r\n        <a class=\"delete-link\" (click)=\"deleteFlashcard(flashcard)\">Delete</a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IFlashcard } from \"../models/flashcard\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashcardService } from \"../services/flashcard.service\";\r\n\r\n@Component({\r\n  selector: \"app-flashcard-component\",\r\n  templateUrl: \"./flashcard.component.html\"\r\n})\r\n\r\nexport class FlashcardComponent implements OnInit{\r\n  viewTitle: string = \"Table\";\r\n  private _listFilter: string = \"\";\r\n  flashcards: IFlashcard[] = [];\r\n\r\n  // injecting the HttpClient service into the component\r\n  constructor(\r\n    private _router: Router,\r\n  private _flashcardService: FlashcardService) {}\r\n\r\n  get listFilter() {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    console.log(\"In setter: \", value);\r\n    this.filteredFlashcards = this.performFilter(value);\r\n  }\r\n\r\n  deleteFlashcard(flashcard: IFlashcard): void {\r\n    const confirmDelete = confirm(`Are you sure you want to delete flashcard #${flashcard.FlashcardId}?`);\r\n\r\n    if (confirmDelete) {\r\n      this._flashcardService.deleteItem(flashcard.FlashcardId)\r\n        .subscribe(response => {\r\n          if (response.success) {\r\n            console.log(response.message);\r\n            this.filteredFlashcards = this.filteredFlashcards.filter(f => f !== flashcard);\r\n          }\r\n        },\r\n          (error) => {\r\n            console.log(\"Error deleting item:\", error);\r\n          });\r\n    }\r\n  }\r\n\r\n  getFlashcards(): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFlashcard array. This is also an observable return by the get\r\n    this._flashcardService.getFlashcards()\r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received \r\n        console.log(\"All\", JSON.stringify(data));\r\n        this.flashcards = data;\r\n        this.filteredFlashcards = this.flashcards;\r\n      });\r\n  }\r\n\r\n  filteredFlashcards: IFlashcard[] = this.flashcards;\r\n  performFilter(filterBy: string): IFlashcard[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.flashcards.filter((flashcard: IFlashcard) =>\r\n      flashcard.Question.toLocaleLowerCase().includes(filterBy));\r\n  }\r\n\r\n  navigateToFlashcardform() {\r\n    this._router.navigate([\"/flashcardform\"]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"FlashcardComponent created\");\r\n    this.getFlashcards();\r\n    console.log(\"getFlashcards() called from oninit!\")\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}