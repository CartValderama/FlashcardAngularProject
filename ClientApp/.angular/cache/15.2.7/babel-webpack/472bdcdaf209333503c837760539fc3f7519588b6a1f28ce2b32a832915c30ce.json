{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FolderComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const folder_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.FolderDescription);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(folder_r1.CreationDate);\n  }\n}\nexport class FolderComponent {\n  // injecting the HttpClient service into the component\n  constructor(_http) {\n    this._http = _http;\n    this.viewTitle = \"Table\";\n    this._listFilter = \"\";\n    this.folders = [];\n    this.filteredFolders = this.folders;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log(\"In setter: \", value);\n    this.filteredFolders = this.performFilter(value);\n  }\n  getFolders() {\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\n    this._http.get(\"api/folder/\").subscribe(data => {\n      console.log(\"All\", JSON.stringify(data));\n      this.folders = data;\n      this.filteredFolders = this.folders;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.folders.filter(folder => folder.FolderName.toLocaleLowerCase().includes(filterBy));\n  }\n  ngOnInit() {\n    console.log(\"FolderComponent created\");\n  }\n}\nFolderComponent.ɵfac = function FolderComponent_Factory(t) {\n  return new (t || FolderComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nFolderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FolderComponent,\n  selectors: [[\"app-folder-component\"]],\n  decls: 26,\n  vars: 4,\n  consts: [[\"id\", \"tableLabel\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FolderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵtext(4, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function FolderComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"div\", 5)(9, \"h4\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function FolderComponent_Template_button_click_11_listener() {\n        return ctx.getFolders();\n      });\n      i0.ɵɵtext(12, \"Get folders\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"table\", 7)(14, \"thead\")(15, \"tr\")(16, \"th\");\n      i0.ɵɵtext(17, \"Folder id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Folder name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Folder description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Folder creation date\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"tbody\");\n      i0.ɵɵtemplate(25, FolderComponent_tr_25_Template, 9, 4, \"tr\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of folders (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredFolders);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IA2BIA,0BAA2C;IACrCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAA4B;IAAAA,iBAAK;IACrCA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;;;;IAH5BA,eAAmB;IAAnBA,wCAAmB;IACnBA,eAAqB;IAArBA,0CAAqB;IACrBA,eAA4B;IAA5BA,iDAA4B;IAC5BA,eAAuB;IAAvBA,4CAAuB;;;ACtBjC,OAAM,MAAOC,eAAe;EAK1B;EACAC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IALzB,cAAS,GAAW,OAAO;IACnB,gBAAW,GAAW,EAAE;IAChC,YAAO,GAAc,EAAE;IA0BvB,oBAAe,GAAc,IAAI,CAACC,OAAO;EArBzC;EAEA,IAAIC,UAAU;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EACA,IAAID,UAAU,CAACE,KAAa;IAC1B,IAAI,CAACD,WAAW,GAAGC,KAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,KAAK,CAAC;IACjC,IAAI,CAACG,eAAe,GAAG,IAAI,CAACC,aAAa,CAACJ,KAAK,CAAC;EAClD;EAEAK,UAAU;IACR;IACA,IAAI,CAACT,KAAK,CAACU,GAAG,CAAY,aAAa,CAAC,CACrCC,SAAS,CAACC,IAAI,IAAG;MAChBP,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEO,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;MACxC,IAAI,CAACX,OAAO,GAAGW,IAAI;MACnB,IAAI,CAACL,eAAe,GAAG,IAAI,CAACN,OAAO;IACrC,CAAC,CAAC;EACN;EAGAO,aAAa,CAACO,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAACf,OAAO,CAACgB,MAAM,CAAEC,MAAe,IACzCA,MAAM,CAACC,UAAU,CAACH,iBAAiB,EAAE,CAACI,QAAQ,CAACL,QAAQ,CAAC,CAAC;EAC7D;EAEAM,QAAQ;IACNhB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC;;AAtCWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT5B7B,6BAAoB;MAAAA,YAAoC;MAAAA,iBAAK;MAE7DA,8BAAiB;MACOA,0BAAU;MAAAA,iBAAM;MACtCA,8BAAsB;MACDA;QAAA;MAAA,EAAyB;MAA5CA,iBAA8C;MAIlDA,8BAAiB;MAETA,aAA2B;MAAAA,iBAAK;MAIxCA,kCAAuD;MAAvBA;QAAA,OAAS8B,gBAAY;MAAA,EAAC;MAAC9B,4BAAW;MAAAA,iBAAS;MAE3EA,iCAAgE;MAGtDA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,mCAAkB;MAAAA,iBAAK;MAC3BA,2BAAI;MAAAA,qCAAoB;MAAAA,iBAAK;MAGjCA,8BAAO;MACLA,gEAKK;MACPA,iBAAQ;;;MAjCUA,eAAoC;MAApCA,mEAAoC;MAKjCA,eAAyB;MAAzBA,wCAAyB;MAMxCA,eAA2B;MAA3BA,0DAA2B;MAgBRA,gBAAkB;MAAlBA,6CAAkB","names":["i0","FolderComponent","constructor","_http","folders","listFilter","_listFilter","value","console","log","filteredFolders","performFilter","getFolders","get","subscribe","data","JSON","stringify","filterBy","toLocaleLowerCase","filter","folder","FolderName","includes","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\folder\\folder.component.html","C:\\Users\\elija\\source\\repos\\FlashcardProject\\FlashcardProject\\ClientApp\\src\\app\\folder\\folder.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">List of folders ({{viewTitle}} View)</h1>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-2\">Filter by:</div>\r\n  <div class=\"col-md-4\">\r\n    <input type=\"text\" [(ngModel)] =\"listFilter\"/>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <h4>Filtered by: {{listFilter}}</h4>\r\n  </div>\r\n</div>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"getFolders()\">Get folders</button>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Folder id</th>\r\n      <th>Folder name</th>\r\n      <th>Folder description</th>\r\n      <th>Folder creation date</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let folder of filteredFolders\">\r\n      <td>{{folder.FolderId}}</td>\r\n      <td>{{folder.FolderName}}</td>\r\n      <td>{{folder.FolderDescription}}</td>\r\n      <td>{{folder.CreationDate}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { IFolder } from \"../models/folder\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"app-folder-component\",\r\n  templateUrl: \"./folder.component.html\"\r\n})\r\n\r\nexport class FolderComponent implements OnInit{\r\n  viewTitle: string = \"Table\";\r\n  private _listFilter: string = \"\";\r\n  folders: IFolder[] = [];\r\n\r\n  // injecting the HttpClient service into the component\r\n  constructor(private _http: HttpClient) {\r\n\r\n  }\r\n\r\n  get listFilter() {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    console.log(\"In setter: \", value);\r\n    this.filteredFolders = this.performFilter(value);\r\n  }\r\n\r\n  getFolders(): void {\r\n    // call to the server with the url \"api/item/\", expected return type is an IFolder array. This is also an observable return by the get\r\n    this._http.get<IFolder[]>(\"api/folder/\") \r\n      .subscribe(data => { // subscribe() used to receive the data when the response is received \r\n        console.log(\"All\", JSON.stringify(data));\r\n        this.folders = data;\r\n        this.filteredFolders = this.folders;\r\n      });\r\n  }\r\n\r\n  filteredFolders: IFolder[] = this.folders;\r\n  performFilter(filterBy: string): IFolder[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.folders.filter((folder: IFolder) =>\r\n      folder.FolderName.toLocaleLowerCase().includes(filterBy));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"FolderComponent created\");\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}